x2 = ifelse(death_tb == 0, 10000, interval_r))
# n.iter <- 31000
# n.burnin <- 1000
# n.thin <- 30
n.iter <- 100
n.burnin <- 10
n.thin <- 1
#Subsetting and formatting data
mortality_strata <- mortality %>%
#Removing severity stratified mortality data for study 79_1023 (only 4-year follow-up)
filter(!cohort_id %in% c("79_1023_5", "79_1023_6", "79_1023_7")) %>%
mutate(study_id_num = as.numeric(factor(study_id)),
pre1930 = as.numeric(time_period == "pre-1930"),
northamerica = as.numeric(location == "North America"),
sanatorium = as.numeric(sanatorium == "Yes"))
#Getting information for each study
study_data <- mortality_strata %>%
group_by(study_id_num) %>%
summarize(pre1930 = first(pre1930),
northamerica = first(northamerica),
sanatorium = first(sanatorium))
output_time <- run_one_strata(mortality_strata, study_data, "pre1930",
n.iter = n.iter, n.burnin = n.burnin, n.thin = n.thin)
output_loc <- run_one_strata(mortality_strata, study_data, "northamerica",
n.iter = n.iter, n.burnin = n.burnin, n.thin = n.thin)
output_san <- run_one_strata(mortality_strata, study_data, "sanatorium",
n.iter = n.iter, n.burnin = n.burnin, n.thin = n.thin)
#### Formatting and Saving Results ---------------------------------------------
data <- getData(mortality_strata)
res_time <- output_time$res
eval_time <- output_time$eval
res_loc <- output_time$res
eval_loc <- output_time$eval
res_san <- output_time$res
eval_san <- output_time$eval
res = res_time
label = "Time"
fixed = TRUE
param <- res[row.names(res) %in% c("meanlog_strata0", "meanlog_strata1",
"sdlog", "theta", "med_strata0", "med_strata1",
"pred_strata0[1]", "pred_strata0[5]", "pred_strata0[10]",
"pred_strata1[1]", "pred_strata1[5]", "pred_strata1[10]"), ]
View(param)
names(param) <- c("cilb", "lowerquant", "est", "upperquant", "ciub")
param <- param %>% mutate(label = label,
value = gsub("_[a-z]*$|_[a-z]*\\[|\\]", "", row.names(.)),
value = ifelse(value == "med", "median", value))
View(param)
param <- param %>% mutate(label = label,
value = gsub("_[a-z0-9]*$|_[a-z]*\\[|\\]", "", row.names(.)),
value = ifelse(value == "med", "median", value))
param <- param %>% mutate(label = label,
value = gsub("_[a-z0-9]*$|_[a-z0-9]*\\[|\\]", "", row.names(.)),
value = ifelse(value == "med", "median", value))
param <- param %>% mutate(label = label,
value = gsub("_[a-z0-9]*$|_[a-z0-9]*\\[|\\]", "", row.names(.)),
value = ifelse(value == "med", "median", value),
strata = ifelse(grepl("0", row.names(.)), 0, 1))
View(param)
#Overall survival and density curves
sdlog <- param %>% filter(value == "sdlog") %>% pull(est)
surv_dens <- NULL
x <- seq(0, 30, 0.1)
for(s in 0:1){
meanlog <- param %>% filter(strata == s, value == "meanlog") %>% pull(est)
dens <- dlnorm(x, meanlog, sdlog)
surv <- plnorm(x, meanlog, sdlog, lower.tail = FALSE)
densTemp <- cbind.data.frame(x, "strata" = s, meanlog, sdlog, dens, surv)
surv_dens <- bind_rows(surv_dens, densTemp)
}
View(surv_dens)
#Credible bounds for survival curves
credint <- res[grepl("pred_[a-z]*", row.names(res)), ]
View(credint)
## Function to format the parameter table from the Bayesian analysis
format_param <- function(res, label, fixed){
#Parameter values
if(fixed == FALSE){
param <- res[row.names(res) %in% c("mu", "sdlog", "theta", "med_comp",
"pred_comp[1]", "pred_comp[5]", "pred_comp[10]"), ]
names(param) <- c("cilb", "lowerquant", "est", "upperquant", "ciub")
param <- param %>% mutate(value = row.names(param),
value = ifelse(value == "mu", "meanlog",
ifelse(value == "med_comp", "median",
gsub("_comp\\[|\\]", "", value))),
label = label)
}else{
param <- res[row.names(res) %in% c("meanlog_strata0", "meanlog_strata1",
"sdlog", "theta", "med_strata0", "med_strata1",
"pred_strata0[1]", "pred_strata0[5]", "pred_strata0[10]",
"pred_strata1[1]", "pred_strata1[5]", "pred_strata1[10]"), ]
names(param) <- c("cilb", "lowerquant", "est", "upperquant", "ciub")
param <- param %>% mutate(label = label,
value = gsub("_[a-z0-9]*$|_[a-z0-9]*\\[|\\]", "", row.names(.)),
value = ifelse(value == "med", "median", value),
strata = ifelse(grepl("strata0", row.names(.)), 0, 1))
}
return(param)
}
#Parameter table
param <- format_param(res, label, fixed)
View(param)
## Function to format the parameter table from the Bayesian analysis
format_param <- function(res, label, fixed){
#Parameter values
if(fixed == FALSE){
param <- res[row.names(res) %in% c("mu", "sdlog", "theta", "med_comp",
"pred_comp[1]", "pred_comp[5]", "pred_comp[10]"), ]
names(param) <- c("cilb", "lowerquant", "est", "upperquant", "ciub")
param <- param %>% mutate(value = row.names(param),
value = ifelse(value == "mu", "meanlog",
ifelse(value == "med_comp", "median",
gsub("_comp\\[|\\]", "", value))),
label = label)
}else{
param <- res[row.names(res) %in% c("meanlog_strata0", "meanlog_strata1",
"sdlog", "theta", "med_strata0", "med_strata1",
"pred_strata0[1]", "pred_strata0[5]", "pred_strata0[10]",
"pred_strata1[1]", "pred_strata1[5]", "pred_strata1[10]"), ]
names(param) <- c("cilb", "lowerquant", "est", "upperquant", "ciub")
param <- param %>% mutate(label = label,
value = gsub("_[a-z0-9]*$|_[a-z0-9]*\\[|\\]", "", row.names(.)),
value = ifelse(value == "med", "median", value),
strata = ifelse(grepl("strata0", row.names(.)), 0,
ifelse(grepl("strata1", row.names(.)), 1, NA)))
}
return(param)
}
#Parameter table
param <- format_param(res, label, fixed)
View(param)
#Overall survival and density curves
sdlog <- param %>% filter(value == "sdlog") %>% pull(est)
surv_dens <- NULL
x <- seq(0, 30, 0.1)
for(s in 0:1){
meanlog <- param %>% filter(strata == s, value == "meanlog") %>% pull(est)
dens <- dlnorm(x, meanlog, sdlog)
surv <- plnorm(x, meanlog, sdlog, lower.tail = FALSE)
densTemp <- cbind.data.frame(x, "strata" = s, meanlog, sdlog, dens, surv)
surv_dens <- bind_rows(surv_dens, densTemp)
}
#Credible bounds for survival curves
credint <- res[grepl("pred_[a-z]*", row.names(res)), ]
credint <- credint %>%
mutate(x = as.numeric(str_extract(row.names(.), "[0-9]+")),
strata = ifelse(grepl("strata0", row.names(.)), 0,
ifelse(grepl("strata1", row.names(.)), 1, NA))) %>%
select(x, strata, surv_est = `50%`, cilb = `2.5%`, ciub = `97.5%`) %>%
bind_rows(cbind.data.frame(x = 0, severity = "Minimal", surv_est = 1, cilb = 1, ciub = 1),
cbind.data.frame(x = 0, severity = "Moderate", surv_est = 1, cilb = 1, ciub = 1),
cbind.data.frame(x = 0, severity = "Advanced", surv_est = 1, cilb = 1, ciub = 1))
credint <- credint %>%
mutate(x = as.numeric(str_extract(row.names(.), "[0-9]+")),
strata = ifelse(grepl("strata0", row.names(.)), 0,
ifelse(grepl("strata1", row.names(.)), 1, NA))) %>%
select(x, strata, surv_est = `50%`, cilb = `2.5%`, ciub = `97.5%`) %>%
bind_rows(cbind.data.frame(x = 0, strata = 0, surv_est = 1, cilb = 1, ciub = 1),
cbind.data.frame(x = 0, strata = 0, surv_est = 1, cilb = 1, ciub = 1))
#Credible bounds for survival curves
credint <- res[grepl("pred_[a-z]*", row.names(res)), ]
credint <- credint %>%
mutate(x = as.numeric(str_extract(row.names(.), "[0-9]+")),
strata = ifelse(grepl("strata0", row.names(.)), 0,
ifelse(grepl("strata1", row.names(.)), 1, NA))) %>%
select(x, strata, surv_est = `50%`, cilb = `2.5%`, ciub = `97.5%`) %>%
bind_rows(cbind.data.frame(x = 0, strata = 0, surv_est = 1, cilb = 1, ciub = 1),
cbind.data.frame(x = 0, strata = 0, surv_est = 1, cilb = 1, ciub = 1))
View(credint)
#Credible bounds for survival curves
credint <- res[grepl("pred_[a-z]*", row.names(res)), ]
View(credint)
credint <- credint %>%
mutate(x_pre = as.numeric(str_extract(row.names(.), "\\[[0-9]+\\]")))
credint <- credint %>%
mutate(x = str_extract(row.names(.), "\\[[0-9]+\\]"))
credint <- res[grepl("pred_[a-z]*", row.names(res)), ]
credint <- credint %>%
mutate(x = gsub("\\[|\\]", "", str_extract(row.names(.), "\\[[0-9]+\\]")))
#Credible bounds for survival curves
credint <- res[grepl("pred_[a-z]*", row.names(res)), ]
credint <- credint %>%
mutate(x = as.numeric(gsub("\\[|\\]", "",
str_extract(row.names(.), "\\[[0-9]+\\]"))),
strata = ifelse(grepl("strata0", row.names(.)), 0,
ifelse(grepl("strata1", row.names(.)), 1, NA))) %>%
select(x, strata, surv_est = `50%`, cilb = `2.5%`, ciub = `97.5%`) %>%
bind_rows(cbind.data.frame(x = 0, strata = 0, surv_est = 1, cilb = 1, ciub = 1),
cbind.data.frame(x = 0, strata = 0, surv_est = 1, cilb = 1, ciub = 1))
View(credint)
surv_dens <- surv_dens %>%
mutate(label = label) %>%
full_join(credint, by = c("x", "strata"))
View(surv_dens)
#Individual study median
med_ind <- as.data.frame(res[grepl("med_ind", row.names(res)),])
med_ind <- med_ind %>%
mutate(study_id_num = as.numeric(gsub("med_ind\\[|\\]", "", row.names(med_ind))),
value = "median")
View(med_ind)
mean_ind <- as.data.frame(res[grepl("meanlog", row.names(res)),])
View(mean_ind)
mean_ind <- as.data.frame(res[grepl("meanlog_ind", row.names(res)),])
View(mean_ind)
mean_ind <- mean_ind %>%
mutate(study_id_num = as.numeric(gsub("meanlog_ind\\[|\\]", "", row.names(mean_ind))),
value = "meanlog")
## Function to format a raw table of study-level results from the Bayesian analysis
format_ind_est <- function(covar, res, data, fixed){
#Individual study median
med_ind <- as.data.frame(res[grepl("med_ind", row.names(res)),])
med_ind <- med_ind %>%
mutate(study_id_num = as.numeric(gsub("med_ind\\[|\\]", "", row.names(med_ind))),
value = "median")
#Individual study predictions
pred_ind <- as.data.frame(res[grepl("pred[0-9]*\\[", row.names(res)),])
pred_ind <- pred_ind %>%
mutate(rown = row.names(.),
study_id_num = as.numeric(gsub("pred[0-9]*\\[|\\]", "", rown)),
value = str_extract(rown, "pred[0-9]*")) %>%
select(-rown)
#Individual study meanlog
if(fixed == FALSE){
mean_ind <- as.data.frame(res[grepl("meanlog", row.names(res)),])
mean_ind <- mean_ind %>%
mutate(study_id_num = as.numeric(gsub("meanlog\\[|\\]", "", row.names(mean_ind))),
value = "meanlog")
}else{
mean_ind <- as.data.frame(res[grepl("meanlog_ind", row.names(res)),])
mean_ind <- mean_ind %>%
mutate(study_id_num = as.numeric(gsub("meanlog_ind\\[|\\]", "", row.names(mean_ind))),
value = "meanlog")
}
#Combining the above
ind_est <- bind_rows(med_ind, mean_ind, pred_ind)
names(ind_est) <- c("cilb", "lowerquant", "est", "upperquant", "ciub",
"study_id_num", "value")
ind_est <- ind_est %>%
full_join(data[[1]], by = "study_id_num") %>%
left_join(covar, by = "study_id") %>%
select(-study_id_num)
return(ind_est)
}
#Overall survival and density table
surv_dens <- format_surv_dens(param, res, label, fixed)
source("~/Boston University/Duration_of_Infectiousness/TB_mortality/R/utils.R")
#Overall survival and density table
surv_dens <- format_surv_dens(param, res, label, fixed)
#Creating table of covariate data
covar <- mortalityData %>%
#full_join(studyid, by = "study_id") %>%
group_by(study_id) %>%
summarize(first_author = first(first_author),
sanatorium = first(sanatorium),
location = first(location),
time_period = first(time_period),
start_type = first(start_type),
.groups = "drop")
mortalityData = mortality
#Creating table of covariate data
covar <- mortalityData %>%
#full_join(studyid, by = "study_id") %>%
group_by(study_id) %>%
summarize(first_author = first(first_author),
sanatorium = first(sanatorium),
location = first(location),
time_period = first(time_period),
start_type = first(start_type),
.groups = "drop")
#Study-level raw results
ind_est <- format_ind_est(covar, res, data, fixed)
#Study-level survival curves
ind_surv <- format_ind_surv(ind_est, covar, param, label)
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"))
View(pred_comb)
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", severity, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author))
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author))
View(pred_comb)
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author),
strata = ifelse(grepl("Overall", study_id) & strata == 0, "",
ifelse(grepl("Overall", study_id) & strata == 1, " ",
severity)),
severity = factor(strata, levels = c("0", "", "1", " ")))
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author),
strata = ifelse(grepl("Overall", study_id) & strata == 0, "",
ifelse(grepl("Overall", study_id) & strata == 1, " ",
severity)),
strata = factor(strata, levels = c("0", "", "1", " ")))
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author),
strata = ifelse(grepl("Overall", study_id) & strata == 0, "",
ifelse(grepl("Overall", study_id) & strata == 1, " ",
strata)),
strata = factor(strata, levels = c("0", "", "1", " ")))
View(pred_comb)
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author),
strata = ifelse(grepl("Overall", study_id) & strata == 0, "",
ifelse(grepl("Overall", study_id) & strata == 1, " ",
strata)))
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"))
pred_comb <- pred_comb %>%
replace_na(list(severity = "",
study_id = "Overall",
first_author = "Overall"))
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author),
strata = ifelse(grepl("Overall", study_id) & strata == 0, "",
ifelse(grepl("Overall", study_id) & strata == 1, " ",
strata)))
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"))
View(pred_comb)
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"))
if(fixed == FALSE){
pred_comb <- pred_comb %>%
replace_na(list(severity = "",
study_id = "Overall",
first_author = "Overall"))
}else{
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author))
}
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"))
if(fixed == FALSE){
pred_comb <- pred_comb %>%
replace_na(list(severity = "",
study_id = "Overall",
first_author = "Overall"))
}else{
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author))
}
View(pred_comb)
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"))
View(pred_comb)
View(ind_est)
View(param)
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"),
label = label)
if(fixed == FALSE){
pred_comb <- pred_comb %>%
replace_na(list(study_id = "Overall",
first_author = "Overall"))
}else{
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author))
}
View(pred_comb)
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"),
label = label)
label = "Time"
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"),
label = label)
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual"))
if(fixed == FALSE){
pred_comb <- pred_comb %>%
replace_na(list(study_id = "Overall",
first_author = "Overall"))
}else{
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author))
}
pred_comb <- pred_comb %>%
mutate(pred_label = factor(value, levels = c("pred1", "pred5", "pred10", "median"),
labels = c("1-Year", "5-Year", "10-Year", "Median")),
label = label)
View(pred_comb)
source("~/Boston University/Duration_of_Infectiousness/TB_mortality/R/utils.R")
#Study-level predictions (median survival and survival probabilities)
pred_comb <- format_pred_comb(ind_est, param, label, fixed)
View(pred_comb)
#Study-level predictions (median survival and survival probabilities)
pred_comb <- format_pred_comb(ind_est, param, label = "Time", fixed)
View(pred_comb)
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual")) %>%
select(-label)
if(fixed == FALSE){
pred_comb <- pred_comb %>%
replace_na(list(study_id = "Overall",
first_author = "Overall"))
}else{
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author))
}
pred_comb <- pred_comb %>%
mutate(pred_label = factor(value, levels = c("pred1", "pred5", "pred10", "median"),
labels = c("1-Year", "5-Year", "10-Year", "Median")),
label = label)
View(pred_comb)
## Function to format the study-level predictions (median survival and survival probabilities)
format_pred_comb <- function(ind_est, param, label, fixed){
#Combining study-specific and overall median and predictions
pred_comb <- ind_est %>%
filter(value == "median" | grepl("pred", value)) %>%
bind_rows(param %>% filter(value == "med" | grepl("pred", value))) %>%
mutate(shape = ifelse(is.na(study_id), "Overall", "Individual")) %>%
select(-label)
if(fixed == FALSE){
pred_comb <- pred_comb %>%
replace_na(list(study_id = "Overall",
first_author = "Overall"))
}else{
pred_comb <- pred_comb %>%
mutate(study_id = ifelse(is.na(study_id), paste("Overall", strata, sep = "_"),
study_id),
first_author = ifelse(is.na(first_author), "Overall", first_author))
}
pred_comb <- pred_comb %>%
mutate(pred_label = factor(value, levels = c("pred1", "pred5", "pred10", "median"),
labels = c("1-Year", "5-Year", "10-Year", "Median")),
label = label)
return(pred_comb)
}
source("~/Boston University/Duration_of_Infectiousness/TB_mortality/R/utils.R")
form_time <- formatBayesian(mortality, res_time, data, "Time", fixed = TRUE)
form_time <- formatBayesian(mortality, res_time, data, label = "Time", fixed = TRUE)
#Parameter table
param <- format_param(res, label, fixed)
#Overall survival and density table
surv_dens <- format_surv_dens(param, res, label, fixed)
#Creating table of covariate data
covar <- mortalityData %>%
#full_join(studyid, by = "study_id") %>%
group_by(study_id) %>%
summarize(first_author = first(first_author),
sanatorium = first(sanatorium),
location = first(location),
time_period = first(time_period),
start_type = first(start_type),
.groups = "drop")
#Study-level raw results
ind_est <- format_ind_est(covar, res, data, fixed)
#Study-level survival curves
ind_surv <- format_ind_surv(ind_est, covar, param, label)
#Study-level predictions (median survival and survival probabilities)
pred_comb <- format_pred_comb(ind_est, param, fixed)
#Study-level predictions (median survival and survival probabilities)
pred_comb <- format_pred_comb(ind_est, param, label, fixed)
source("~/Boston University/Duration_of_Infectiousness/TB_mortality/R/utils.R")
form_time <- formatBayesian(mortality, res_time, data, label = "Time", fixed = TRUE)
